def print_numbers(n):
    if n > 1:
        print_numbers(n - 1)
    print(n)

#Ввод числа и вызов функции
n = int(input("Введите натуральное число n: "))
print_numbers(n)



def print_range(a, b):
    # Базовый случай: если начальное и конечное число равны
    if a == b:
        print(a)
    # Если A < B, выводим числа в порядке возрастания
    elif a < b:
        # Выводим текущее число
        print(a)
        # Рекурсивно вызываем функцию для следующего числа
        print_range(a + 1, b)
    # Если A > B, выводим числа в порядке убывания
    else:
        # Выводим текущее число
        print(a)
        # Рекурсивно вызываем функцию для предыдущего числа
        print_range(a - 1, b)

#Получаем первое число от пользователя
a = int(input("Введите целое число A: "))
#Получаем второе число от пользователя
b = int(input("Введите целое число B: "))

#Вызываем рекурсивную функцию для вывода чисел от A до B
print_range(a, b)


def sum_digits(n):
    # Базовый случай: если число меньше 10, оно состоит из одной цифры
    # Возвращаем это число как сумму его цифр
    if n < 10:



        def prime_divisors(n, divisor=2):
    # Базовый случай: если число стало равно 1, рекурсия завершается
    if n == 1:
        return
    
    # Если текущий делитель больше n, завершаем рекурсию
    if divisor > n:
        return
    
    # Если n делится на текущий делитель без остатка
    if n % divisor == 0:
        # Выводим этот простой делитель
        print(divisor)
        # Рекурсивно вызываем функцию для n, разделенного на этот делитель
        # Используем тот же делитель, так как он может делиться несколько раз
        prime_divisors(n // divisor, divisor)
    else:
        # Если не делится, переходим к следующему делителю
        prime_divisors(n, divisor + 1)
# Получаем число от пользователя
n = int(input("Введите натуральное число n>1: "))
prime_divisors(n)
        return n


